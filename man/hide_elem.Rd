% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hide_elem.R
\name{hide_elem}
\alias{hide_elem}
\title{\code{hide_elem}}
\usage{
hide_elem(elem, css = "browsertools-hidden")
}
\arguments{
\item{elem}{the id or class name of an html elem}

\item{css}{a string containing the class to remove from an html element
(default class is \code{hidden})}
}
\value{
hide an HTML element
}
\description{
Hides an html element by id or class name. This function, by default,
adds the class \code{browsertools-hidden} to the desired element and updates
attribute \code{aria-hidden}.
}
\examples{
if (interactive()) {
  library(shiny)
  ui <- tagList(
      browsertools::use_browsertools(),
      tags$main(
          tags$h2("Hide Element Example"),
          tags$p(
              id = "my-text-example",
              "Click the button below to hide the message below."
          ),
          tags$button(
              id = "hideElement",
              class = "shiny-bound-input action-button",
              "Hide Element"
          ),
          tags$p(
              id = "myMessage",
              "Hide this message!"
          )
      )
  )
  server <- function(input, output, session) {
      observeEvent(input$hideElement, {
          browsertools::hide_elem(
              elem = "#myMessage"
          )
      })
  }
  shinyApp(ui, server)
}

}
\seealso{
\code{\link[=show_elem]{show_elem()}}, \code{\link[=toggle_elem]{toggle_elem()}}, \code{\link[=hidden]{hidden()}}
}
\keyword{browsertools}
\keyword{css}
\keyword{show}
